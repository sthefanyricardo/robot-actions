name: E2E Tests
run-name: Testes de CI com Robot Framework - ${{ github.event.head_commit.message }}

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Navegador para executar os testes'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - chromium
        - firefox
        - webkit

env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '22'

jobs:
  tests:
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        echo "🐍 Instalando dependências Python..."
        python -m pip install --upgrade pip
        echo "📦 Instalando pacotes do requirements.txt..."
        pip install -r requirements.txt
        echo "✅ Dependências instaladas com sucesso!"

    - name: Initialize Browser
      run: |
        echo "🌐 Inicializando browser: ${{ matrix.browser }}"
        rfbrowser init
        echo "✅ Browser inicializado com sucesso!"
      env:
        BROWSER: ${{ matrix.browser }}

    - name: Create results directory
      run: mkdir -p ./tests-results-CI/${{ matrix.browser }}
    
    - name: Run E2E Tests
      run: |
        echo "🚀 Executando testes para o navegador: ${{ matrix.browser }}"
        echo "📁 Diretório de trabalho: $(pwd)"
        echo "📂 Conteúdo do diretório tests:"
        ls -la tests/ || echo "Diretório tests não encontrado"
        
        robot \
          --outputdir ./tests-results-CI/${{ matrix.browser }} \
          --variable BROWSER:${{ matrix.browser }} \
          --variable HEADLESS:true \
          --variable TIMEOUT:30 \
          --loglevel INFO \
          --include smoke \
          tests/
      continue-on-error: true

    - name: Check Test Results
      if: always()
      run: |
        echo "📊 Verificando resultados dos testes..."
        if [ -f "./tests-results-CI/${{ matrix.browser }}/output.xml" ]; then
          echo "✅ Arquivo output.xml encontrado!"
          ls -la "./tests-results-CI/${{ matrix.browser }}/"
        else
          echo "⚠️ Arquivo output.xml não encontrado."
        fi

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: tests-results-CI/${{ matrix.browser }}/
        retention-days: 30

    - name: Robot Framework Reporter
      uses: joonvena/robotframework-reporter-action@v2.5
      if: always()
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
        report_path: tests-results-CI/${{ matrix.browser }}

  # Job para consolidar resultados e publicar no GitHub Pages
  publish-results:
    needs: tests
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: ./all-results

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Create consolidated report
      run: |
        mkdir -p ./gh-pages
        echo "# Relatório de Testes E2E" > ./gh-pages/index.md
        echo "" >> ./gh-pages/index.md
        echo "## Execução: ${{ github.run_number }}" >> ./gh-pages/index.md
        echo "**Data:** $(date)" >> ./gh-pages/index.md
        echo "**Commit:** ${{ github.sha }}" >> ./gh-pages/index.md
        echo "**Branch:** ${{ github.ref_name }}" >> ./gh-pages/index.md
        echo "" >> ./gh-pages/index.md
        
        # Copiar resultados de cada navegador
        for browser_dir in ./all-results/test-results-*/; do
          if [ -d "$browser_dir" ]; then
            browser_name=$(basename "$browser_dir" | sed 's/test-results-//')
            echo "### Navegador: $browser_name" >> ./gh-pages/index.md
            echo "" >> ./gh-pages/index.md
            
            # Copiar arquivos HTML
            mkdir -p "./gh-pages/$browser_name"
            cp -r "$browser_dir"/* "./gh-pages/$browser_name/" 2>/dev/null || true
            
            # Adicionar links para os relatórios
            if [ -f "./gh-pages/$browser_name/report.html" ]; then
              echo "- [Relatório HTML](./$browser_name/report.html)" >> ./gh-pages/index.md
            fi
            if [ -f "./gh-pages/$browser_name/log.html" ]; then
              echo "- [Log Detalhado](./$browser_name/log.html)" >> ./gh-pages/index.md
            fi
            echo "" >> ./gh-pages/index.md
          fi
        done

    - name: Convert index.md to HTML
      run: |
        sudo apt-get install -y pandoc
        pandoc ./gh-pages/index.md -o ./gh-pages/index.html

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./gh-pages

  # Job para deploy no GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: publish-results
    if: always()
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4